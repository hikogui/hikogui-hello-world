#
# .github/workflows/build-on-windows.yml
#
# Copyright 2021 Jens A. Koch.
# SPDX-License-Identifier: BSL-1.0
# This file is part of hikogui.
#

name: "Build on Windows"
on: [push, pull_request]
jobs:
  build:
    name: ${{matrix.config.NAME}}
    # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md
    runs-on: ${{matrix.config.OS}}

    strategy:
      fail-fast: false
      matrix:
        # Each entry in config has a:
        # - NAME: The name used as the suffix in files, directories and artifacts.
        #         If the name ends with "-debug" code-coverage is being uploaded.
        # - OS: The operating system to run the job on.
        # - VCPKG_TARGET_TRIPLET: The vcpkg target triplet, or empty if cmake should use fetch.
        # - CMAKE_PRESET: The cmake preset to load.
        config:
          - {
              NAME: vc17-x64-windows-static-rel,
              OS: windows-2022,
              CMAKE_PRESET: vc17-x64-windows-static-rel
            }

    env:
      PLATFORM: x64
      VCPKG_ROOT: C:\tools\vcpkg
      IS_MAIN_BRANCH: ${{ github.ref == 'refs/heads/main' && (github.base_ref == 'refs/heads/main' || github.base_ref == '') }}
      HIBUILD_PRESET: ${{ matrix.config.CMAKE_PRESET }}
      BUILD_PRESET: ${{ format('{0}-local', matrix.config.CMAKE_PRESET) }}
      PACKAGE_PRESET: ${{ format('{0}-local-package', matrix.config.CMAKE_PRESET) }}

    defaults:
      run:
        shell: cmd

    steps:
      - name: üîΩ Checkout Code
        uses: actions/checkout@v2 # https://github.com/actions/checkout

      # Build Artifact
      # ---------------
      # The ECPACK artifact contains files for building a signed installer, including the "ecpack.json" manifest file.
      #
      # Naming Scheme:
      #
      #  - $ECPACK_NAME  :  hikogui-hello-world-0.3.0-win64
      #
      # When we package the ECPACK artifact:
      #
      #  - ${{ECPACK_NAME}} is used to create a .json file and a storage directory with the suffix "-files"
      #  - ${{ECPACK_NAME}}-ecpack is used to name the final ecpack.zip file
      #
      - name: üìù Fetch version data & set build artifact names
        shell: pwsh
        run: |
          $NAME=$(jq -r .name vcpkg.json).replace('-', '_')
          $VERSION=$(jq -r .version vcpkg.json)
          echo "ECPACK_NAME=$NAME-$VERSION-win64" >> $env:GITHUB_ENV

      - name: üìù Get Vulkan SDK version number
        id: vulkan-version
        uses: hikogui/install-vulkan-sdk-action/sdk-version@v3

      - name: üéØ Cache VULKAN SDK & Runtime
        id: cache-vulkan
        uses: actions/cache@v1
        with:
          path: ${{steps.vulkan-version.outputs.VULKAN_SDK}}
          key: cache-windows-vulkan-${{steps.vulkan-version.outputs.VULKAN_VERSION}}-2

      - name: üîΩ Install Vulkan SDK
        if: steps.cache-vulkan.outputs.cache-hit != 'true'
        uses: hikogui/install-vulkan-sdk-action/install-sdk@v3
        with:
          VULKAN_VERSION: ${{steps.vulkan-version.outputs.VULKAN_VERSION}}
          VULKAN_SDK: ${{steps.vulkan-version.outputs.VULKAN_SDK}}

      - name: üìù Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: ${{env.PLATFORM}}

      - name: üîΩ Install HikoGUI
        shell: pwsh
        run: |
          git clone -b main --single-branch --depth 1 --quiet https://github.com/hikogui/hikogui.git "../hikogui"
          cd "../hikogui"
          cmake --preset=${{matrix.config.CMAKE_PRESET}}
          cmake --build --preset=${{matrix.config.CMAKE_PRESET}}-library
          cd "out/build/${{matrix.config.CMAKE_PRESET}}"
          cmake --install .

      - name: üìê Build hikogui_hello_world
        env:
          VULKAN_SDK: ${{steps.vulkan-version.outputs.VULKAN_SDK}}
        shell: pwsh
        run: |
          cmake --preset=${{matrix.config.CMAKE_PRESET}}-local
          cmake --build --preset=${{matrix.config.CMAKE_PRESET}}-local-package
          copy "out\build\${{matrix.config.CMAKE_PRESET}}-local\${{env.ECPACK_NAME}}.json" "out\build\${{matrix.config.CMAKE_PRESET}}-local\${{env.ECPACK_NAME}}-files\ecpack.json"

      - name: üöÄ Upload Artifact ‚ûî ECPACK
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.ECPACK_NAME}}-ecpack
          path: out\build\${{matrix.config.CMAKE_PRESET}}-local\${{env.ECPACK_NAME}}-files\

